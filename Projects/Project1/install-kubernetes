---
  - name: Install Docker, Kubernetes Master, and Node
    hosts: all
    become: true
    tasks:
      - name: Install Docker and dependencies
        apt:
          name: ["apt-transport-https", "ca-certificates", "curl", "software-properties-common"]
          state: present

      - name: Add Docker APT repository key
        apt_key:
          url: https://download.docker.com/linux/ubuntu/gpg
          state: present

      - name: Add Docker APT repository
        apt_repository:
          repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable
          state: present

      - name: Install Docker
        apt:
          name: docker-ce
          state: present

      - name: Add Kubernetes APT repository key
        apt_key:
          url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
          state: present

      - name: Add Kubernetes APT repository
        apt_repository:
          repo: deb http://apt.kubernetes.io/ kubernetes-xenial main
          state: present

      - name: Install kubeadm, kubelet, and kubectl
        apt:
          name: ["kubeadm", "kubelet", "kubectl"]
          state: present

  # Kubernetes Master Setup
      - name: Initialize Kubernetes Master
        shell: kubeadm init --apiserver-advertise-address={{ MASTER_HOST }}
        args:
          executable: /bin/bash
        register: kubeadm_output
        when: "'{{ MASTER_HOST }}' in inventory_hostname"

      - name: Copy Kubernetes config for user
        shell: mkdir -p $HOME/.kube && sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
        args:
          executable: /bin/bash
        environment:
          HOME: "/home/{{ ansible_ssh_user }}"
        when: "'{{ MASTER_HOST }}' in inventory_hostname"

    # Kubernetes Node Setup
      - name: Join the Kubernetes cluster
        shell: kubeadm join {{ MASTER_HOST }}:6443 --token {{ TOKEN }} --discovery-token-ca-cert-hash {{ HASH }}
        args:
          executable: /bin/bash
        when: "'{{ NODE_HOST }}' in inventory_hostname"

**************************************************************************************************************************************************************************************************

install kubernetes on centos7
ChatGPT
To install Kubernetes on CentOS 7, you can use the kubeadm tool, which simplifies the process of setting up a Kubernetes cluster. Here's a step-by-step guide to help you install Kubernetes on CentOS 7:

1. Prerequisites:

Make sure you have a CentOS 7 machine with at least 2GB of RAM and a decent amount of CPU.
Ensure you have administrative privileges (e.g., sudo access).
Disable SELinux or configure it appropriately for Kubernetes. You can temporarily disable SELinux with sudo setenforce 0, but it's recommended to follow the Kubernetes SELinux guide for a proper setup.
2. Install Docker:

Install Docker on your CentOS 7 machine:

bash
Copy code
sudo yum install -y docker
sudo systemctl start docker
sudo systemctl enable docker
3. Disable Firewall:

To simplify the installation process, you can temporarily disable the firewall:

bash
Copy code
sudo systemctl stop firewalld
sudo systemctl disable firewalld
4. Disable Swap:

Kubernetes recommends disabling swap on your nodes:

bash
Copy code
sudo swapoff -a
5. Add Kubernetes Repository and Install kubeadm, kubelet, and kubectl:

Add the Kubernetes repository and install the necessary components:

bash
Copy code
# Add the Kubernetes repository
sudo tee /etc/yum.repos.d/kubernetes.repo <<EOF
[kubernetes]
name=Kubernetes
baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
enabled=1
gpgcheck=1
repo_gpgcheck=1
gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
EOF

# Install kubeadm, kubelet, and kubectl
sudo yum install -y kubeadm kubelet kubectl
6. Initialize Kubernetes Control Plane:

On the master node, run the following command to initialize the control plane:

bash
Copy code
sudo kubeadm init --pod-network-cidr=10.244.0.0/16
After the initialization, the command will provide instructions on how to set up kubectl and join worker nodes to the cluster. Be sure to save the provided kubeadm join command for later use.

7. Set Up kubectl for the Current User:

Configure kubectl for your user:

bash
Copy code
mkdir -p $HOME/.kube
sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
sudo chown $(id -u):$(id -g) $HOME/.kube/config
8. Deploy Network Plugin:

Choose a network plugin like Calico, Flannel, or Weave, and deploy it:

bash
Copy code
kubectl apply -f <network_plugin.yaml>
9. Join Worker Nodes (If Applicable):

On each worker node, run the kubeadm join command that was provided after initializing the control plane.

10. Verify Cluster Status:

Use kubectl to check the status of your cluster and the nodes:

bash
Copy code
kubectl get nodes
That's it! You've successfully installed Kubernetes on CentOS 7 using kubeadm. Please note that this is a simplified guide; additional configurations and security considerations might be necessary for production environments. Always refer to the official Kubernetes documentation for the most accurate and up-to-date information.
